import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

/* eslint-disable @repo/internal/codegen/signed-source-integrity */
// We're only importing AtlassianLight as light is the default theme
import { default as atlassianLightDefaultTokenValues } from './typescript/atlassian-light-token-default-values';
import { default as atlassianSpacingDefaultTokenValues } from './typescript/atlassian-spacing-token-default-values';
import { default as atlassianTypographyDefaultTokenValues } from './typescript/atlassian-typography-token-default-values';

var defaultTokens = _objectSpread(_objectSpread(_objectSpread({}, atlassianLightDefaultTokenValues), atlassianSpacingDefaultTokenValues), atlassianTypographyDefaultTokenValues);

export default defaultTokens;